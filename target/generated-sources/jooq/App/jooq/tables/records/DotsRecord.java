/*
 * This file is generated by jOOQ.
 */
package App.jooq.tables.records;


import App.jooq.tables.Dots;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DotsRecord extends UpdatableRecordImpl<DotsRecord> implements Record6<Integer, Integer, Double, Double, Long, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dots.Id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.dots.Id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.dots.iduser</code>.
     */
    public void setIduser(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.dots.iduser</code>.
     */
    public Integer getIduser() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.dots.X</code>.
     */
    public void setX(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.dots.X</code>.
     */
    public Double getX() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.dots.Y</code>.
     */
    public void setY(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.dots.Y</code>.
     */
    public Double getY() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.dots.R</code>.
     */
    public void setR(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.dots.R</code>.
     */
    public Long getR() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.dots.IsArea</code>.
     */
    public void setIsarea(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.dots.IsArea</code>.
     */
    public Boolean getIsarea() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Double, Double, Long, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, Double, Double, Long, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Dots.DOTS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Dots.DOTS.IDUSER;
    }

    @Override
    public Field<Double> field3() {
        return Dots.DOTS.X;
    }

    @Override
    public Field<Double> field4() {
        return Dots.DOTS.Y;
    }

    @Override
    public Field<Long> field5() {
        return Dots.DOTS.R;
    }

    @Override
    public Field<Boolean> field6() {
        return Dots.DOTS.ISAREA;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getIduser();
    }

    @Override
    public Double component3() {
        return getX();
    }

    @Override
    public Double component4() {
        return getY();
    }

    @Override
    public Long component5() {
        return getR();
    }

    @Override
    public Boolean component6() {
        return getIsarea();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getIduser();
    }

    @Override
    public Double value3() {
        return getX();
    }

    @Override
    public Double value4() {
        return getY();
    }

    @Override
    public Long value5() {
        return getR();
    }

    @Override
    public Boolean value6() {
        return getIsarea();
    }

    @Override
    public DotsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DotsRecord value2(Integer value) {
        setIduser(value);
        return this;
    }

    @Override
    public DotsRecord value3(Double value) {
        setX(value);
        return this;
    }

    @Override
    public DotsRecord value4(Double value) {
        setY(value);
        return this;
    }

    @Override
    public DotsRecord value5(Long value) {
        setR(value);
        return this;
    }

    @Override
    public DotsRecord value6(Boolean value) {
        setIsarea(value);
        return this;
    }

    @Override
    public DotsRecord values(Integer value1, Integer value2, Double value3, Double value4, Long value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DotsRecord
     */
    public DotsRecord() {
        super(Dots.DOTS);
    }

    /**
     * Create a detached, initialised DotsRecord
     */
    public DotsRecord(Integer id, Integer iduser, Double x, Double y, Long r, Boolean isarea) {
        super(Dots.DOTS);

        setId(id);
        setIduser(iduser);
        setX(x);
        setY(y);
        setR(r);
        setIsarea(isarea);
    }
}
